  CONST
    Podkartoteka    = ".\\VHF\\%03d";
    LISTA           = "Lista oblotow";
    BazaLokalizacji = "VHFlist.ini";
    LOTNISKA        = "Lista";
    MainSection     = "VHF";


(*CONST
  LISTA    = "Lista oblotow";
  VOR_LIST = "vorlist.ini";*)


  VAR
    hDlg                : HDLG;
    RedrawScr           : BOOLEAN;
    ListaOblotow        : HLIST;
    ListaOblotowBAK     : HLIST;
    ListaLokalizacji    : HLIST;
    ListaLokalizacjiBAK : HLIST;
    OstatniOblot        : INTEGER;

  PROCEDURE ProbujWstawicOblot();

  BEGIN
    EndDialog(TRUE);
  END ProbujWstawicOblot;

  PROCEDURE Pokaz
            (    s   : ARRAY OF CHAR;
                 Snd : CARDINAL      );

  BEGIN
    Info(s);
    IF Snd # 0FFFFH
    THEN
      Sound(Snd);
    END (* if Snd *);
    Wait(3 * TInOneSecond());
    NoSound;
    Info("");
  END Pokaz;


  PROCEDURE EnumObl
            ( VAR s : ARRAY OF CHAR );

  BEGIN
    DodajDoListy(ListaOblotow, s);
  END EnumObl;

  PROCEDURE ZmienOblot
            (    idx : INTEGER );
  VAR
    s  : ARRAY [0 .. 99] OF CHAR;
    i  : INTEGER;
    R  : RECT;
    ff : RECORD
           Polozenie  :
             PolozenieGeo;
           Deklinacja :
             REAL;
         END;

  BEGIN
    IF idx < 0 THEN
      RETURN;
    END;
    IF NOT RedrawScr & (idx = OstatniOblot)
    THEN
      RETURN;
    END (* if *);
    RedrawScr := FALSE;
    OstatniOblot := idx;
    Idx2Str(ListaOblotow, idx, NazwaOblotu);
    GetPrivateProfileString(NazwaOblotu, "Kartoteka", ".\", NazwaPlikuOpisu,
                            NazwaPlikuIni);
    IF NazwaPlikuOpisu[Length(NazwaPlikuOpisu) - 1] # '\'
    THEN
      Insert("\", NazwaPlikuOpisu, 0FFFH);
    END (* if NazwaPlikuOpisu *);
    Insert(NazwaPlikuIni, NazwaPlikuOpisu, 0FFFH);
    GetPrivateProfileString(NazwaOblotu, "Nazwa", "", NazwaUrzadz1,
                            NazwaPlikuOpisu);

    IF NazwaUrzadz1[0] = 0C
    THEN
      AssignRect( R, 300, 50, 500, 97 );
      Redraw(hDlg, R);
      AssignRect( R, 0, 0, 790, 30 );
      Redraw(hDlg, R);
      RETURN;
    END (* if NazwaUrzadz1 *);
   OpisNadajnika(NazwaUrzadz1, NazwaPlikuOpisu);

    AssignRect( R, 300, 50, 500, 97 );
    Redraw(hDlg, R);
    Wr2fStrXY(NazwaUrzadz1, 300, 50, WHITE, BLUE);

    AssignRect( R, 0, 0, 790, 30 );
    Redraw(hDlg, R);

    ff.Polozenie := NadajnikVHF.Polozenie;
    ff.Deklinacja := NadajnikVHF.Deklinacja;
    sprintf(s,
            "Poˆo¾enie=%dø%02d'%02dE, %dø%02d'%02dN, ë=%5.1lfø",
            ff);
    WrStr(s, 11, 11, WHITE, WHITE);
  END ZmienOblot;

  PROCEDURE WymienPasujaceObloty
            (    i : INTEGER );
  VAR
    Urzadzenie : Str99;

  BEGIN
    SkasujWszystko(ListaOblotow);
    Idx2Str(ListaLokalizacji, i, Urzadzenie);
    WymienWszystkiePasujace(Urzadzenie, EnumObl);
    RedrawScr := TRUE;
    ZmienOblot(0);
  END WymienPasujaceObloty;

  PROCEDURE WstawDoListaLokalizacji;
  VAR
    u   : ARRAY [0 .. 99] OF CHAR;
    ok  : BOOLEAN;
    ile,
    i   : INTEGER;

  BEGIN
    GetPrivateProfileString(LOTNISKA, "Ilosc", "0", u, BazaLokalizacji);
    StringToInt(u, ile, ok);
    IF NOT ok
    THEN
      ile := 0;
    END (* if *);
    ok := FALSE;
    FOR i := 0 TO ile - 1 DO
      sprintf(u, "VHF%d", i);
      GetPrivateProfileString(LOTNISKA, u, "***********", u, BazaLokalizacji);
      DodajDoListy(ListaLokalizacji, u);
    END (* for i *);
  END WstawDoListaLokalizacji;

  PROCEDURE OblotOK();
  VAR
    s   : Str40;
    sel : INTEGER;

  BEGIN
    s[0] := 0C;
    sel := GetSelection(ListaOblotow);
    IF sel >= 0 THEN
      Idx2Str( ListaOblotow, sel, s );
    END;
    IF s[0] = 0C THEN
      Pokaz("Ale, ale... Inspekcja musi miec nazwe...", 500);
      RETURN;
    END (* if sel *);
    CardToString(sel, s, 1);
(*    Terminate( Warning );*)
    WritePrivateProfileString(MainSection, "OstatniOblot", s, "pomiar.par");
    EndDialog(TRUE);
  END OblotOK;


 PROCEDURE InspekcjaEP( ) ;
  VAR
    R    : RECT;
    b    : Button;
    s    : ARRAY [0 .. 99] OF CHAR;
    i    : CARDINAL;
    kont : BOOLEAN;

    PROCEDURE SetDefInsp;
    BEGIN
      GetPrivateProfileString(MainSection, "OstatniOblot", "0", s, "pomiar.par");
      StringToCard(s, i, kont);
      IF NOT kont
      THEN
        i := 0;
      END (* if *);
      ZmienOblot(i);
      SetSelection(ListaOblotow, i);
    END SetDefInsp;

  BEGIN (* InspekcjaEP *)
    RedrawScr := TRUE;
    AssignRect(R, 0, 0, 800, 600 - 17);
    hDlg := TworzDialog(R, "insp.dib", FALSE);
    SetPaletteEntry( GetDialogDIBHandle( hDlg ), 2, 180, 180, 60 );

    (* Listy dialogowe *)
    AssignRect(R, 500, 100, 770, 200);
    Wr2fStrXY(' INSPEKCJE ', 500, 50, WHITE, BLUE);
    ListaOblotowBAK := WstawListe(hDlg, R, FALSE);
    ListaOblotow := ListaOblotowBAK; (* kopia bo dzialamy na danych glob. *)
    SetNotificationProc(ListaOblotow, ZmienOblot);
    Sortowana(ListaOblotow, FALSE);

    AssignRect(R, 500, 310, 770, 500);
    Wr2fStrXY(' LOKALIZACJE ', 500, 270, WHITE, BLUE);
    ListaLokalizacjiBAK := WstawListe(hDlg, R, FALSE);
    ListaLokalizacji := ListaLokalizacjiBAK; (* kopia bo dzialamy na danych glob. *)
    SetNotificationProc(ListaLokalizacji, WymienPasujaceObloty);

    DodajDoListy(ListaLokalizacji, "* wszystkie *");
    WstawDoListaLokalizacji;

    AssignRect(R, 30, 526, 130, 570);
    WstawButton(hDlg, R, "OK", 0, ShortCuts.kbAltO, OblotOK, b);
    AssignRect(R, 200, 526, 300, 570);
    WstawButton(hDlg, R, "WYJ—CIE", 0, ShortCuts.kbAltW, AltF4, b);
    MoveRect(R, 0, 100);
    WstawButton(hDlg, R, "", -1, ShortCuts.kbEnter, OblotOK, b);
    SetDefInsp;
    RedrawScr := FALSE;
    kont := Go(hDlg);
    UsunDialog( hDlg );
    IF kont & (NazwaOblotu[0] # 0C)
    THEN
      RETURN ; (*TOMEK*)
    ELSIF NOT kont
    THEN
      Info("Zaniechano wyboru");
    ELSE
      Info("Zrezygnowano z wyboru inspekcji");
    END (* if kont *);
      mainState:=UrzadzenieMS;
    RETURN (*TOMEK AbortIE*);
  END InspekcjaEP;


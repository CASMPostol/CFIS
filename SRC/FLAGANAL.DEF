(*.F- *)
(**********************************************************************
|  Title   : Analiza odcinkow wystapienia flagi (warunku)
|  Author  : M.Postol
|  System  : LOGITECH MODULA-2/86
|  History :
|    Rel 3.0. M.Postol
|      Wprowadzono eleminacj najkrotszych odcinkow
|      Zwiekszylem dlugosc tabeli z opisem odcinkow, aby spelnic wymaganie
|      10 najkrotszych odcinkow
|
|  Copyright (C), CAS LODZ POLAND.
|  TEL: 42' 686 25 47
|  mailto: techsupp@cas.com.pl
|  http: www.cas.com.pl
|
**********************************************************************)
(*.F+ *)

DEFINITION MODULE FlagAnal;

  FROM SpecConv  IMPORT
    ToStringProcT;
    
  FROM SYSTEM IMPORT
    WORD;
    
  FROM CommonTypes IMPORT
    NumStrefy, GlownyOdbiornikT;
    
  TYPE
    OdcinekIle    =
      [ 0 .. 11];
    OdcinekNr     =
      [ 1 .. MAX(OdcinekIle)];
    OdcinekIdx     =
      [ 1 .. CARDINAL(MAX(OdcinekIle))+1];
    F_OpisOdcinka =
      RECORD
        sector : NumStrefy; (* strefa informacja dodatkowa dla ILS'a     *)
        nilVal : WORD;      (* aktualna wartosc nil                      *)
        pocz   : WORD;      (* poczatek odcinka                          *) 
        kon    : WORD;      (* koniec odcinka                            *)
        dlugosc: CARDINAL;  (* dlugosc w jednostkach rejestracji danych  *)
      END;
    F_TabOdcinkow = ARRAY OdcinekNr OF F_OpisOdcinka;
    FlagsTable    =  
      RECORD
        w_IleOd    : OdcinekIle;
        W_IleRazem : CARDINAL;
        opis       : F_TabOdcinkow;
        CASE katANieOdleglosc: BOOLEAN  OF
          FALSE:
            w_OdlegloscRazem : CARDINAL;
          |
          TRUE:
            w_KatRazem : INTEGER;
        END; (* CASE katANieOdleglosc *)
      END;
    F_TablicaOdci =
      ARRAY GlownyOdbiornikT OF FlagsTable;

  PROCEDURE FlagErr_Anal
            ( VAR prevFlagState : BOOLEAN;
                  currFlagState : BOOLEAN;
              VAR flagErr       : FlagsTable;
                  dis           : WORD;
                  (* pozycja aktualnego punktu *)
                  zoneNr        : NumStrefy
                  (* dodatkowa informacja zachowywana w opisie odcinka zalezna 
                     od procedury *)
              );
   (* Jesli currFlagState = TRUE, a poprzednio zapamietany w prevFlagState
      stan byl FALSE tworzony jest nowy odcinek. Za kazdym razem kiedy
      currFlagState = TRUE uaktualniany jest koniec odcinka. W przypadku, gdy 
      ilosc odcinkow jest zbyt duza najkrotszy jest wywalany, a jego dlugosc 
      dodawana do w_OdlegloscRazem/w_KatRazem. W W_IleRazem zapamietywana 
      jest ilosc odcinkow wywalonych. zoneNr zapamietywane jest raz w 
      momencie tworzenia odcinka. W rezultacie w tablicy pozostaje 10 
      najkrotszych odcinkow (decyduje czas rejestracji) i ostatni. 
   *)

  PROCEDURE InitFlagErr
            ( VAR flagErr          : FlagsTable;
                  (* inicjowana tablica *)
                  katANieOdleglosc : BOOLEAN
                  (* TRUE jesli w procedurze odniesienim X jest kat *)
            );

  PROCEDURE GetNextFrac
            (     converP           : ToStringProcT;
                  flagErr           : FlagsTable;
              VAR str               : ARRAY OF CHAR;
              VAR fracNum           : OdcinekIdx     ) : BOOLEAN;
  
  PROCEDURE MinPoczKonSig
            (     flagErr : FlagsTable ): INTEGER;

  PROCEDURE MinPoczKonDis
            (     flagErr : FlagsTable ): CARDINAL;

  PROCEDURE SumaDlugosciSig
            (     flagErr : FlagsTable ): INTEGER;
    (* Oblicza sumaryczna dlugosc odcinkow - lukow [deg] *)
END FlagAnal.
